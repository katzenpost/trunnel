// Code generated by trunnel. DO NOT EDIT.

package ints

import (
	"encoding/binary"
	"errors"
)

type Ints struct {
	Byte  uint8
	Word  uint16
	Dword uint32
	Qword uint64
}

func (i *Ints) Parse(data []byte) ([]byte, error) {
	{
		if len(data) < 1 {
			return nil, errors.New("data too short")
		}
		i.Byte = data[0]
		data = data[1:]
	}
	{
		if len(data) < 2 {
			return nil, errors.New("data too short")
		}
		i.Word = binary.BigEndian.Uint16(data)
		data = data[2:]
	}
	{
		if len(data) < 4 {
			return nil, errors.New("data too short")
		}
		i.Dword = binary.BigEndian.Uint32(data)
		data = data[4:]
	}
	{
		if len(data) < 8 {
			return nil, errors.New("data too short")
		}
		i.Qword = binary.BigEndian.Uint64(data)
		data = data[8:]
	}
	return data, nil
}
