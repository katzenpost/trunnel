// Code generated by trunnel. DO NOT EDIT.

package eos

import (
	"encoding/binary"
	"errors"
)

type Fourbytes struct {
	X uint16
	Y uint16
}

func (f *Fourbytes) Parse(data []byte) ([]byte, error) {
	cur := data
	{
		if len(cur) < 2 {
			return nil, errors.New("data too short")
		}
		f.X = binary.BigEndian.Uint16(cur)
		cur = cur[2:]
	}
	{
		if len(cur) < 2 {
			return nil, errors.New("data too short")
		}
		f.Y = binary.BigEndian.Uint16(cur)
		cur = cur[2:]
	}
	{
		if len(cur) > 0 {
			return nil, errors.New("trailing data disallowed")
		}
	}
	return cur, nil
}

func ParseFourbytes(data []byte) (*Fourbytes, error) {
	f := new(Fourbytes)
	_, err := f.Parse(data)
	if err != nil {
		return nil, err
	}
	return f, nil
}
