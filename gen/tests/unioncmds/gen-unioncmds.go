// Code generated by trunnel. DO NOT EDIT.

package unioncmds

import (
	"encoding/binary"
	"errors"
)

type UnionCmds struct {
	Tag uint8
	X   [2]uint32
	Y   uint32
}

func (u *UnionCmds) Parse(data []byte) ([]byte, error) {
	{
		if len(data) < 1 {
			return nil, errors.New("data too short")
		}
		u.Tag = data[0]
		data = data[1:]
	}
	{
		switch {
		case u.Tag == 1:
		case u.Tag == 2:
			{
				return nil, errors.New("disallowed case")
			}
		default:
			{
				for i := 0; i < 2; i++ {
					if len(data) < 4 {
						return nil, errors.New("data too short")
					}
					u.X[i] = binary.BigEndian.Uint32(data)
					data = data[4:]
				}
			}
		}
	}
	{
		if len(data) < 4 {
			return nil, errors.New("data too short")
		}
		u.Y = binary.BigEndian.Uint32(data)
		data = data[4:]
	}
	return data, nil
}
