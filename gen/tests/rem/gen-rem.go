// Code generated by trunnel. DO NOT EDIT.

package rem

import (
	"encoding/binary"
	"errors"
)

type Rem struct {
	Head uint32
	Tail []uint8
}

func (r *Rem) Parse(data []byte) ([]byte, error) {
	{
		if len(data) < 4 {
			return nil, errors.New("data too short")
		}
		r.Head = binary.BigEndian.Uint32(data)
		data = data[4:]
	}
	{
		r.Tail = make([]uint8, 0)
		for len(data) > 0 {
			var t uint8
			if len(data) < 1 {
				return nil, errors.New("data too short")
			}
			t = data[0]
			data = data[1:]
			r.Tail = append(r.Tail, t)
		}
	}
	return data, nil
}
