// Code generated by trunnel. DO NOT EDIT.

package nest

import "errors"

type Point struct {
	X uint8
	Y uint8
}

func (p *Point) Parse(data []byte) ([]byte, error) {
	{
		if len(data) < 1 {
			return nil, errors.New("data too short")
		}
		p.X = data[0]
		data = data[1:]
	}
	{
		if len(data) < 1 {
			return nil, errors.New("data too short")
		}
		p.Y = data[0]
		data = data[1:]
	}
	return data, nil
}

type Rect struct {
	NorthEast *Point
	SouthWest *Point
}

func (r *Rect) Parse(data []byte) ([]byte, error) {
	{
		var err error
		r.NorthEast = new(Point)
		data, err = r.NorthEast.Parse(data)
		if err != nil {
			return nil, err
		}
	}
	{
		var err error
		r.SouthWest = new(Point)
		data, err = r.SouthWest.Parse(data)
		if err != nil {
			return nil, err
		}
	}
	return data, nil
}
